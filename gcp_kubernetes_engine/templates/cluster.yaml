apiVersion: container.gcp.crossplane.io/v1beta2
kind: Cluster
metadata:
    name:
    namespace:
spec:
    deletionPolicy:
    forProvider:
        addonsConfig:
        {{ if .Values.forProvider.addonsConfig.cloudRunConfig}}
            cloudRunConfig:
                disabled:
                loadBalancerType:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.configConnectorConfig}}
            configConnectorConfig:
                enabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.dnsCacheConfig}}
            dnsCacheConfig:
                enabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.gcePersistentDiskCSIDriverConfig}}
            gcePersistentDiskCSIDriverConfig:
                enabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.horizontalPodAutoscaling}}
            horizontalPodAutoscaling:
                disabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.httpLoadBalancing}}
            httpLoadBalancing:
                disabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.kubernetesDashboard}}
            kubernetesDashboard:
                disabled:
        {{ end}}
        {{ if .Values.forProvider.addonsConfig.networkPolicyConfig}}
            networkPolicyConfig:
                disabled:
        {{ end}}
        {{ if .Values.forProvider.authenticatorGroupsConfig}}
        authenticatorGroupsConfig:
            enabled: 
            securityGroup:
        {{ end}}
        {{ if .Values.forProvider.autopilot}}
        autopilot:
            enabled:
        {{ end}}
        {{ if .Values.forProvider.autoscaling}}
        autoscaling:
            autoprovisioningLocations:
            autoprovisioningNodePoolDefaults:
                bootDiskKmsKey:
                diskSizeGb:
                diskType:
                management:
                    autoRepair:
                    autoUpgrade:
                minCpuPlatform:
                oauthScopes:
                serviceAccount:
                shieldedInstanceConfig:
                    enableIntegrityMonitoring:
                    enableSecureBoot:
                upgradeSettings:
                    maxSurge:
                    maxUnavailable:
                enableNodeAutoprovisioning:
                resourceLimits:
                    maximum: 
                    minimum: 
                    resourceType:
        {{ end}}
        {{ if .Values.forProvider.binaryAuthorization}}
        binaryAuthorization:
                    enabled:
        {{ end}}
        {{ if .Values.forProvider.clusterIpv4Cidr}}
        clusterIpv4Cidr:
        {{ end}}
        confidentialNodes:
                enabled:
        databaseEncryption:
                keyname:
                state:
        defaultMaxPodsConstraint:
                maxPodsPerNode:
        description:
        enableKubernetesAlpha:
        enableTpu:
        initialClusterVersion:
        ipAllocationPolicy:
            clusterIpv4CidrBlock:
            clusterSecondaryRangeName:
            createSubnetwork:
            nodeIpv4CidrBlock:
            servicesIpv4CidrBlock:
            servicesSecondaryRangeName:
            subnetworkName:
            tpuIpv4CidrBlock: 
            useIPAliases:
            useRoutes:
        labelFingerprint:
        legacyAbac:
            enabled:
        location:
        locations:
        loggingService:
        maintenancePolicy:
            window:
                dailyMaintenanceWindow:
                    startTime:
                maintenanceExclusions:
                recurringWindow:
                recurrence:
                window:
                    endTime:
                    startTime:
        masterAuth:
            clientCertificateConfig:
                    issueClientCertificate:
            username:
        masterAuthorizedNetworksConfig:
            cidrBlocks:
                - cidrBlock:
                  displayName:
            enabled:
        monitoringService:
        network:
        networkConfig: 
            datapathProvider:
            defaultSnatStatus:
                disabled:
            enableIntraNodeVisibility:
            privateIpv6GoogleAccess:
            networkPolicy:
                enabled:
                provider:
            networkRef:
                    name:
            networkSelector:
                matchControllerRef:
                matchLabels:
            notificationConfig: 
                    pubsub: 
                        enabled:
                        topic:
            privateClusterConfig:
                enablePrivateEndpoint:
                enablePrivateNodes:
                masterGlobalAccessConfig: 
                    enabled:
                masterIpv4CidrBlock:
            releaseChannel:
                channel:
            resourceLabels:
            resourceUsageExportConfig:
                bigqueryDestination:
                    datasetId:
                consumptionMeteringConfig:
                enableNetworkEgressMetering:
            subnetwork:
            subnetworkRef:
                name:
            subnetworkSelector:
                matchControllerRef:
                matchLabels:
            verticalPodAutoscaling:
                enabled:
            workloadIdentityConfig:
                workloadPool:
    providerConfigRef:
        name:
    providerRef:
        name:
